<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HappySad</title>
  
  <subtitle>-RunDatGame</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-10-13T15:51:30.814Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>SOMEBODYZ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>递归解决链表</title>
    <link href="http://example.com/2022/10/13/%E9%80%92%E5%BD%92%E8%A7%A3%E5%86%B3%E9%93%BE%E8%A1%A8/"/>
    <id>http://example.com/2022/10/13/%E9%80%92%E5%BD%92%E8%A7%A3%E5%86%B3%E9%93%BE%E8%A1%A8/</id>
    <published>2022-10-13T15:06:12.000Z</published>
    <updated>2022-10-13T15:51:30.814Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-两数相加"><a href="#1-两数相加" class="headerlink" title="1. 两数相加"></a>1. 两数相加</h1><p>Input: (7 -&gt; 2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)<br>Output: 7 -&gt; 8 -&gt; 0 -&gt; 7</p><ul><li>链表是最高位到最低位</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">addTwoNumbers</span><span class="params">(ListNode* l1, ListNode* l2)</span> </span>&#123;</span><br><span class="line">        stack&lt;<span class="type">int</span>&gt;st1;</span><br><span class="line">        stack&lt;<span class="type">int</span>&gt;st2;</span><br><span class="line">            <span class="keyword">while</span>(l1!=<span class="literal">nullptr</span>) &#123; <span class="comment">// 将链表遍历入栈 </span></span><br><span class="line">                st1.<span class="built_in">push</span>(l1-&gt;val);</span><br><span class="line">                l1=l1-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(l2!=<span class="literal">nullptr</span>)&#123; <span class="comment">// 将链表遍历入栈 </span></span><br><span class="line">                st2.<span class="built_in">push</span>(l2-&gt;val);</span><br><span class="line">                l2=l2-&gt;next;</span><br><span class="line">            &#125;       </span><br><span class="line">        <span class="type">int</span> c=<span class="number">0</span>; <span class="comment">//c 是进位 </span></span><br><span class="line">        ListNode* New=<span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">while</span>(!st1.<span class="built_in">empty</span>()||!st2.<span class="built_in">empty</span>()||c!=<span class="number">0</span>)&#123; <span class="comment">// 循环条件：只要有一个栈不为空或者进位不为空 </span></span><br><span class="line">            <span class="type">int</span> a=st1.<span class="built_in">empty</span>()?<span class="number">0</span>:st1.<span class="built_in">top</span>(); <span class="comment">//a 就是链表 1 中的值 </span></span><br><span class="line">            <span class="type">int</span> b=st2.<span class="built_in">empty</span>()?<span class="number">0</span>:st2.<span class="built_in">top</span>(); <span class="comment">//b 就是链表 2 中的值 </span></span><br><span class="line">            <span class="keyword">if</span>(!st1.<span class="built_in">empty</span>()) st1.<span class="built_in">pop</span>(); <span class="comment">// 栈不为空时 将 a 出栈 </span></span><br><span class="line">            <span class="keyword">if</span>(!st2.<span class="built_in">empty</span>()) st2.<span class="built_in">pop</span>(); <span class="comment">// 栈不为空时 b 出栈 </span></span><br><span class="line">            <span class="type">int</span> cc=a+b+c; <span class="comment">//cc 是两结点的值之和 </span></span><br><span class="line">            c=cc/<span class="number">10</span>; <span class="comment">// 进位如果超过 10 ,/10 得 1 =&gt; 进一位 c=1</span></span><br><span class="line">            cc%=<span class="number">10</span>; <span class="comment">// 对 10 取余即取个位 </span></span><br><span class="line">            ListNode* ccnode=<span class="keyword">new</span> <span class="built_in">ListNode</span>(cc); <span class="comment">// 用 cc 值作为新结点 </span></span><br><span class="line">            ccnode-&gt;next=New; <span class="comment">// 头插法 New 一开始指向空 </span></span><br><span class="line">            New=ccnode; <span class="comment">// 再更新 New 指向刚刚插在自己上的结点 这样就会实现头插法 </span></span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">return</span> Next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="2-回文链表"><a href="#2-回文链表" class="headerlink" title="2. 回文链表"></a>2. 回文链表</h1><p>** 快慢指针 **<br>慢指针边走边掉头 ，当快指针走完了，前半个链表已经逆转结束了，然后将两个长度相等的链表挨个对比判断是否相等。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">isPalindrome</span><span class="params">(ListNode* head)</span> </span>&#123;</span><br><span class="line">        ListNode*fast=head,*slow=head,*cur=head,*pre=<span class="literal">nullptr</span>;</span><br><span class="line">        <span class="keyword">if</span>(head==<span class="literal">nullptr</span>||head-&gt;next==<span class="literal">nullptr</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(fast&amp;&amp;fast-&gt;next)&#123;<span class="comment">// 当快指针走完了，前半个链表已经逆转结束了。</span></span><br><span class="line">            cur=slow; <span class="comment">//cur 记录当前位置 </span></span><br><span class="line">            slow=slow-&gt;next;</span><br><span class="line">            fast=fast-&gt;next-&gt;next;</span><br><span class="line">            <span class="comment">// 头插法逆转前半部分 </span></span><br><span class="line">            cur-&gt;next=pre;</span><br><span class="line">            pre=cur;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(fast) slow=slow-&gt;next;<span class="comment">// 如果 fast 为 null  说明链表长度为单数 slow 已经在中间的结点。</span></span><br><span class="line">                                 <span class="comment">// 如果 fast 还没到 null 说明长度为偶数 再让 slow 作为后半部分的第一个 </span></span><br><span class="line">                                 <span class="comment">//slow 用作遍历后半链表 </span></span><br><span class="line"></span><br><span class="line">       <span class="comment">// 这时候开始遍历两个子链表 判断是否相等 如果相等则为回文链表 </span></span><br><span class="line">        <span class="keyword">while</span>(pre&amp;&amp;slow)&#123;</span><br><span class="line">            <span class="keyword">if</span>(pre-&gt;val==slow-&gt;val)&#123;</span><br><span class="line">                pre=pre-&gt;next;</span><br><span class="line">                slow=slow-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;             </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;            </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="3-合并有序链表"><a href="#3-合并有序链表" class="headerlink" title="3. 合并有序链表"></a>3. 合并有序链表</h1><h1 id="4-相交链表"><a href="#4-相交链表" class="headerlink" title="4. 相交链表"></a>4. 相交链表</h1><h1 id="5-分隔链表"><a href="#5-分隔链表" class="headerlink" title="5. 分隔链表"></a>5. 分隔链表</h1><h1 id="6-删除倒数第-n-个结点"><a href="#6-删除倒数第-n-个结点" class="headerlink" title="6. 删除倒数第 n 个结点"></a>6. 删除倒数第 n 个结点</h1><h1 id="7-奇偶链表"><a href="#7-奇偶链表" class="headerlink" title="7. 奇偶链表"></a>7. 奇偶链表</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-两数相加&quot;&gt;&lt;a href=&quot;#1-两数相加&quot; class=&quot;headerlink&quot; title=&quot;1. 两数相加&quot;&gt;&lt;/a&gt;1. 两数相加&lt;/h1&gt;&lt;p&gt;Input: (7 -&amp;gt; 2 -&amp;gt; 4 -&amp;gt; 3) + (5 -&amp;gt; 6 -&amp;gt</summary>
      
    
    
    
    <category term="LeetCode" scheme="http://example.com/categories/LeetCode/"/>
    
    
    <category term="Algorithom" scheme="http://example.com/tags/Algorithom/"/>
    
    <category term="LeetCode" scheme="http://example.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>忏悔录-KKecho</title>
    <link href="http://example.com/2022/10/13/%E5%BF%8F%E6%82%94%E5%BD%95/"/>
    <id>http://example.com/2022/10/13/%E5%BF%8F%E6%82%94%E5%BD%95/</id>
    <published>2022-10-12T21:06:47.000Z</published>
    <updated>2022-10-13T15:23:13.027Z</updated>
    
    <content type="html"><![CDATA[<h1 id="没有21还是个savage"><a href="#没有21还是个savage" class="headerlink" title="没有21还是个savage"></a>没有21还是个savage</h1><p>那天躺在地上的时候我就在想</p><p>曾经做过的事对妈老汉儿该咋个讲</p><p>他们都对我有恩</p><p>我不能够辜负他们我的心里很恼火</p><p>能不能好好生活这个事情我都还要仔细去雕琢</p><p>住在最贫穷的街区</p><p>他们都觉得我太脏了</p><p>有一天掀起了血雨</p><p>手腕上全部都挂满了钢索</p><p>wake up in the morning</p><p>我根本没想躲避</p><p>他们抓住我的软肋</p><p>And they start hit my head</p><p>As the young boi自己忏悔</p><p>那年我才18岁</p><p>这的空气让我有点反胃</p><p>不太想承认我犯了罪</p><p>没有21还是个savage</p><p>觉得时间还能够浪费</p><p>I will die</p><p>实在很残忍</p><p>If I dont succeed</p><p>这些年确实没出息</p><p>我性格非常的孤僻</p><p>渐渐的我学会感恩</p><p>慢慢开始变得更安分</p><p>在泥泞之中不停的翻滚</p><p>我能够成为想成为的人</p><p>always cry</p><p>长太乖</p><p>经常被欺负</p><p>我变得坏</p><p>不想再</p><p>被他们低估</p><p>I choose</p><p>I have a city to hide</p><p>I choose</p><p>I have a city to hide</p><p>听我说妈妈</p><p>今晚我可能就先不回家了</p><p>我要把年少轻狂的自己弄了</p><p>看着镜子里的人wtf eh</p><p>bloods on my hands</p><p>我逃啊逃啊逃</p><p>黑色衣裳的人也跑直到</p><p>到了死胡同</p><p>我开始爆粗口</p><p>他让我住口</p><p>对话的是me and myself</p><p>我逃出我的身体这感觉很微妙</p><p>空气中弥漫着忏悔的味道</p><p>彩色的气泡它们将我给围绕</p><p>finally im free now</p><p>finally im free now</p><p>他们抓住我的软肋</p><p>And they start hit my head</p><p>As the young boi自己忏悔</p><p>那年我才18岁</p><p>这的空气让我有点反胃</p><p>不太想承认我犯了罪</p><p>没有21还是个savage</p><p>觉得时间还能够浪费</p><p>他们抓住我的软肋</p><p>And they start hit my head</p><p>As the young boi自己忏悔那年我才18岁</p><p>这的空气让我有点反胃</p><p>不太想承认我犯了罪</p><p>没有21还是个savage</p><p>觉得时间还能够浪费</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;没有21还是个savage&quot;&gt;&lt;a href=&quot;#没有21还是个savage&quot; class=&quot;headerlink&quot; title=&quot;没有21还是个savage&quot;&gt;&lt;/a&gt;没有21还是个savage&lt;/h1&gt;&lt;p&gt;那天躺在地上的时候我就在想&lt;/p&gt;
&lt;p&gt;曾经做过的</summary>
      
    
    
    
    <category term="Music" scheme="http://example.com/categories/Music/"/>
    
    
    <category term="Music" scheme="http://example.com/tags/Music/"/>
    
    <category term="KKecho" scheme="http://example.com/tags/KKecho/"/>
    
  </entry>
  
  <entry>
    <title>会魔法的老人</title>
    <link href="http://example.com/2022/10/13/%E4%BC%9A%E9%AD%94%E6%B3%95%E7%9A%84%E8%80%81%E4%BA%BA/"/>
    <id>http://example.com/2022/10/13/%E4%BC%9A%E9%AD%94%E6%B3%95%E7%9A%84%E8%80%81%E4%BA%BA/</id>
    <published>2022-10-12T20:15:35.000Z</published>
    <updated>2022-10-13T15:23:13.026Z</updated>
    
    <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="/" alt="法老.jpg"></p>          </div><p>会魔法的老人</p><p>作词 : 法老&#x2F;KKECHO</p><p>作曲 : 法老&#x2F;KKECHO</p><p>编曲：Land James</p><p>录音：杨秋儒</p><p>混音：隆历奇</p><p>我从出生就是一个自闭小孩</p><p>容易被别人一句话给轻易伤害</p><p>所以 我在唱台上</p><p>不断的摆弄我的肢体</p><p>为了阻挡光线 和我眼神里的荒诞</p><p>独自在电影院里</p><p>观看一部杰作</p><p>野火在我的心底燃烧</p><p>梦醒生活再被截获</p><p>在闪光灯和相机</p><p>面前对爷爷的照片别过</p><p>把人生中的脆弱通过歌词演说</p><p>无法去甄别 这是错的 或者是对的</p><p>是real或fake 妈妈我只是累了</p><p>我罪恶 在感情上面怀有 一丝愧色</p><p>如果我们刨开心脏 你们会说这就对了</p><p>我把它放在博物馆里展览</p><p>看着一旁熙攘的人群在逐渐汇合</p><p>有人在鼓掌 有人哭喊 有人朝他吐痰</p><p>却唯独没人 给我擦干我的泪河</p><p>故事被晒干</p><p>过程都太短</p><p>时间可以倒退用我生命来换</p><p>过路的人都已谢完了幕</p><p>一个人吃饭往往会比中药还再苦</p><p>他们只在乎cash oh cash oh cash</p><p>我视他们为trash oh trash oh trash</p><p>我想要跑到北上广去盖一整栋楼</p><p>我知道那些东西不急以后都会有</p><p>后来那台电视机前只剩我在换台</p><p>后来懂我的人的鬓角都已变的斑白</p><p>后来聚拢的人都随着时间滴答滴答散开</p><p>直到我 再也不敢把那回忆之书翻开</p><p>尝试在周围的窃窃私语</p><p>中 寻求治愈</p><p>在一张张的字据</p><p>里面 去避免失去</p><p>可是失去他就是会失去啊</p><p>这是所有人和事的结局</p><p>我要怎么才能做到豁达</p><p>是我的错吗？</p><p>我也想把那精致长袍脱下</p><p>换种活法</p><p>我也想转身拥抱过去</p><p>但我不会魔法</p><p>若你我相逢在人海里</p><p>请你送我一束花</p><p>我想要成为 一名 艺术家</p><p>或许走到死亡的尽头</p><p>那苍白的老人 热情早已不在他的心头</p><p>他会失忆的 但会有人把他的生命记忆拼凑</p><p>因为有关法老的故事 他们至今还没听够</p><p>故事被晒干</p><p>过程都太短</p><p>时间可以倒退用我生命来换</p><p>过路的人都已谢完了幕</p><p>一个人吃饭往往会比中药还再苦</p><p>他们只在乎cash oh cash oh cash</p><p>我视他们为trash oh trash oh trash</p><p>我想要跑到北上广去盖一整栋楼</p><p>我知道那些东西不急以后都会有</p>]]></content>
    
    
    <summary type="html">Pharaoh,Kkecho</summary>
    
    
    
    
    <category term="Music" scheme="http://example.com/tags/Music/"/>
    
    <category term="Pharaoh" scheme="http://example.com/tags/Pharaoh/"/>
    
  </entry>
  
  <entry>
    <title>[Leetcode34] 在排序数组中查找元素的第一个和最后一个位置</title>
    <link href="http://example.com/2022/10/13/Leetcode34/"/>
    <id>http://example.com/2022/10/13/Leetcode34/</id>
    <published>2022-10-12T17:09:47.000Z</published>
    <updated>2022-10-13T15:24:39.767Z</updated>
    
    <content type="html"><![CDATA[<h1 id="34-在排序数组中查找元素的第一个和最后一个位置"><a href="#34-在排序数组中查找元素的第一个和最后一个位置" class="headerlink" title="34. 在排序数组中查找元素的第一个和最后一个位置"></a>34. 在排序数组中查找元素的第一个和最后一个位置</h1><p>要求如下：给你一个按照非递减顺序排列的整数数组 nums，和一个目标值 target。请你找出给定目标值在数组中的开始位置和结束位置。你必须设计并实现时间复杂度为 <em>O (log n)</em> 的算法解决此问题。</p><h2 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h2><p>主要思想还是二分法，但是和一般的二分查找区别在于不好判断目标值在数组中的开始位置和结束位置也就是左右端点的索引值。</p><ul><li>提示：默认你已经了解基础二分查找的操作 *<br>因此我们假设已经找到了目标值但是不知道左边和右边还有没有相同的值（不知道当前这个位置是否为开始 &#x2F; 结束位置），所以设计两个函数分别找开始 &#x2F; 结束位置：GetLower，GetUpper。<br>就当成一般的二分查找来写，但是有一点区别：</li></ul><h3 id="找开始-x2F-结束位置"><a href="#找开始-x2F-结束位置" class="headerlink" title="找开始 &#x2F; 结束位置"></a>找开始 &#x2F; 结束位置</h3><p>如果想找结束位置，那么（<strong>1）当目标值大于等于 mid 值时 应该改变左指针为 mid+1 相当于将左指针向右逼近直到左指针等于右指针；<br>（2）当目标值小于 mid 值时 说明左指针已经过了要找的结束位置了，不满足循环条件：left&lt;right 了，此时的右指针会指向 mid-1，指向的就是结束位置，返回右指针（结束位置索引）</strong><br>同理，如果想找开始位置，那么当目标值小于等于 mid 值时 应该改变右指针为 mid-1，相当于将右指针向左逼近直到左指针等于右指针；后面不再赘述。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GetLower</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp;nums, <span class="type">int</span> target)</span></span>&#123;</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>,j=nums.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;=j)&#123;</span><br><span class="line">            <span class="type">int</span> mid = i+(j-i)/<span class="number">2</span>;</span><br><span class="line">              <span class="comment">// 如果想找开始位置，那么当目标值小于等于 mid 值时 应该改变右指针 j=mid-1，相当于将右指针向左逼近直到左指针等于右指针 </span></span><br><span class="line">            <span class="keyword">if</span>(target&lt;=nums [mid]) j=mid<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(target&gt;nums [mid]) i=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">GetUpper</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp;nums, <span class="type">int</span> target)</span></span>&#123;</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>,j=nums.<span class="built_in">size</span>()<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(i&lt;=j)&#123;</span><br><span class="line">            <span class="type">int</span> mid = i+(j-i)/<span class="number">2</span>;</span><br><span class="line">    <span class="comment">// 如果想找结束位置，那么当目标值大于等于 mid 值时 应该改变左指针 i=mid+1 相当于将左指针向右逼近直到左指针等于右指针；</span></span><br><span class="line">            <span class="keyword">if</span>(target&gt;=nums [mid]) i=mid+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(target&lt;nums [mid]) j=mid<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">return</span> j;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在主函数中只需要加上判定语句比如开始位置大于结束位置的情况：根据题意应该返回数组 [-1,-1]<br>否则返回数组 [lower,upper]<br>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">searchRange</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> lower=<span class="built_in">GetLower</span>(nums,target);</span><br><span class="line"><span class="type">int</span> upper=<span class="built_in">GetUpper</span>(nums,target);</span><br><span class="line"><span class="keyword">if</span>(lower&gt;upper) <span class="keyword">return</span> &#123;<span class="number">-1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">return</span> &#123;lower,upper&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完整代码如下：</p><pre><code class="cpp">class Solution &#123;public:    vector&lt;int&gt; searchRange (vector&lt;int&gt;&amp; nums, int target) &#123;int lower=GetLower (nums,target);int upper=GetUpper (nums,target);if (lower&gt;upper) return &#123;-1,-1&#125;;return &#123;lower,upper&#125;;&#125;private:    int GetLower (vector&lt;int&gt;&amp;nums, int target)&#123;        int i=0,j=nums.size ()-1;        while (i&lt;=j)&#123;            int mid = i+(j-i)/2;            if (target&lt;=nums [mid]) j=mid-1;            else if (target&gt;nums [mid]) i=mid+1;        &#125;        return i;    &#125;    int GetUpper (vector&lt;int&gt;&amp;nums, int target)&#123;        int i=0,j=nums.size ()-1;        while (i&lt;=j)&#123;            int mid = i+(j-i)/2;            if (target&gt;=nums [mid]) i=mid+1;            else if (target&lt;nums [mid]) j=mid-1;        &#125;            return j;    &#125;&#125;;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;34-在排序数组中查找元素的第一个和最后一个位置&quot;&gt;&lt;a href=&quot;#34-在排序数组中查找元素的第一个和最后一个位置&quot; class=&quot;headerlink&quot; title=&quot;34. 在排序数组中查找元素的第一个和最后一个位置&quot;&gt;&lt;/a&gt;34. 在排序数组中查找元</summary>
      
    
    
    
    <category term="LeetCode" scheme="http://example.com/categories/LeetCode/"/>
    
    
    <category term="Algorithom" scheme="http://example.com/tags/Algorithom/"/>
    
    <category term="LeetCode" scheme="http://example.com/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>I LOVE YOU</title>
    <link href="http://example.com/2022/03/10/%E6%88%91%E7%88%B1%E4%BD%A0/"/>
    <id>http://example.com/2022/03/10/%E6%88%91%E7%88%B1%E4%BD%A0/</id>
    <published>2022-03-10T04:30:16.000Z</published>
    <updated>2022-10-13T15:03:13.363Z</updated>
    
    <content type="html"><![CDATA[<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=386365800&bvid=BV1Ed4y1D7G3&cid=782627415&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;" ></iframe></div><h1 id="This-is-a-song-called-I-Love-you"><a href="#This-is-a-song-called-I-Love-you" class="headerlink" title="This is a song called I Love you"></a>This is a song called I Love you</h1><p>我好爱你</p><p>我此刻不会再隐瞒你</p><p>在开始恋情之前我说</p><p>我没资格去评判你</p><p>你那么美丽</p><p>从头到尾散发魅力</p><p>我想和你环游世界一起去看看北极</p><p>你说 我会一直陪你陪你 一切的习惯都随你</p><p>在酒吧的前厅 窗外又开始响起雷雨</p><p>我们走出户外 在雨中开始漫长的接吻</p><p>两个不羁的人格 决定一起对世界泄愤</p><p>自由是我们的信条</p><p>心跳是信号</p><p>一起去滑板摔出青泡</p><p>但只要两个人浸泡在一起那温柔的就像摔进天堂的音道</p><p>让我们互相眼里只有彼此 把所有荷尔蒙都引爆</p><p>但世界末日我们也会分开</p><p>因为宇宙塌了下来 所以我要去给你撑开</p><p>火车轨道 只是为了我们存在</p><p>我们马上出发 就让不相干的人全滚蛋</p><p>（在一刹那woman）</p><p>（特别的话woman）</p><p>你是我见过镜头里最完美那woman</p><p>（在一刹那woman）</p><p>（特别的话woman）</p><p>我一定不会认错那就是爱woman</p><p>（那就是爱）越过山河和你拥吻</p><p>（这就是爱）in this moment</p><p>要多伟大的爱才能把爱这个字写的工整</p><p>我可以停止呼吸</p><p>但我不能停止爱你 woman</p><p>你说你爱听摇滚</p><p>可居然陪我喜欢说唱</p><p>你说这世界的音乐就像动物多种多样</p><p>别藐视</p><p>看海岸路边的礁石</p><p>麋鹿在天际消失</p><p>当我拉着你的手时 自然的十指交织</p><p>我们和所有当地艺术家都成为了朋友</p><p>或许他们没有成就</p><p>但从未忘记奋斗</p><p>就像现在并非旺季</p><p>我们却牵手在海边贩卖我们手工制品</p><p>青青子衿，悠悠我心</p><p>你美的好像来自诗经</p><p>你却说为我感到有文化而吃惊</p><p>我生气地在后面追着你划过了海岸线</p><p>转瞬我们就在呼伦贝尔的羊群里面 过夜</p><p>每次贴近你 我都感到大脑与呼吸 脱节</p><p>我好爱你 爱到想把此刻的时间 全部终结</p><p>我不关心火星是否有水 只关心这个冬天</p><p>我找了好几辈子的人就 站在我的身边</p><p>（在一刹那woman）</p><p>（特别的话woman）</p><p>你是我见过镜头里最完美那woman</p><p>（在一刹那woman）</p><p>（特别的话woman）</p><p>我一定不会认错那就是爱woman</p><p>（那就是爱）越过山河和你拥吻</p><p>（这就是爱）in this moment</p><p>要多伟大的爱才能把爱这个字写的工整</p><p>我可以停止呼吸</p><p>但我不能停止爱你 woman</p><p>我们搭建了两个人的家庭</p><p>建在房车里的咖啡厅</p><p>让那些忙碌的人 带来故事由我们聆听</p><p>我说再也不回城市</p><p>我想要自由真实</p><p>我想和你一起老去化成分子</p><p>那暖熏的风暴将把我们</p><p>卷上天空</p><p>降下雨水</p><p>滋润雄伟的天山最高尖峰</p><p>这不就是我们所追求的吗</p><p>哪怕这臭水沟 连喝水都会 硌牙</p><p>我们也做相依伴的荷花</p><p>我看着她的眼睛</p><p>语气坚定</p><p>她却 突然闪烁地像是画布上的剪影</p><p>开始变形</p><p>奇怪的光线开始交织</p><p>我大喊她的名字</p><p>她只是微笑 直到变成了蝴蝶消失</p><p>再睁开眼睛 是泪水 是害怕地把呼吸屏住</p><p>是黑暗里找她的手 摸到件工作服</p><p>忙碌的窗外 没有爱情</p><p>有混凝土 有风声在呼 有东方 明珠</p><p>（在一刹那woman）</p><p>（特别的话woman）</p><p>你是我见过镜头里最完美那woman</p><p>（在一刹那woman）</p><p>（特别的话woman）</p><p>我一定不会认错那就是爱woman</p><p>（那就是爱）越过山河和你拥吻</p><p>（这就是爱）in this moment</p><p>要多伟大的爱才能把爱这个字写的工整</p><p>我可以停止呼吸</p><p>但我不能停止爱你</p>]]></content>
    
    
    <summary type="html">Welcome to My Fisrt Blog</summary>
    
    
    
    <category term="Love" scheme="http://example.com/categories/Love/"/>
    
    
    <category term="Music" scheme="http://example.com/tags/Music/"/>
    
    <category term="Life" scheme="http://example.com/tags/Life/"/>
    
  </entry>
  
</feed>
